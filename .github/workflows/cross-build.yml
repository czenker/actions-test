name: cross-build
on:
  workflow_dispatch:
    inputs:
      source:
        description: 'Source netinstall.tar.gz (from S3 or releases)'
        required: true
env:
  NODEJS_VERSION: 12
  AWS_S3_NIGHTLY_BASEURI: https://wifi-tally-nightly.s3.eu-central-1.amazonaws.com
  AWS_S3_NIGHTLY_BUCKET: wifi-tally-nightly
  AWS_S3_NIGHTLY_REGION: eu-central-1
jobs:
  window:
    runs-on: windows-latest
    steps:
      - name: Use node.js ${{ env.NODEJS_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODEJS_VERSION }}
      - name: Install dependencies
        run: |
          python -m pip install requests boto3
      - name: Download the artifact (cross-env)
        id: hub
        run: |
          import requests
          import tarfile
          import os

          url = r"${{ github.event.inputs.source }}"
          tmp_dir = r"${{ runner.temp }}"
          file_name = os.path.basename(url)
          dir_name = file_name[:-7]
          file_path = os.path.join(tmp_dir, file_name)
          dir_path = os.path.join(tmp_dir, dir_name)

          print('downloading {}'.format(url))
          response = requests.get(url)

          with open(file_path, 'wb') as f:
              f.write(response.content)

          print('created {}'.format(file_path))

          tar = tarfile.open(file_path, "r:gz")
          tar.extractall(path=dir_path)
          tar.close()

          hub_dir = os.path.join(dir_path, "hub")
          print(hub_dir)
          print('::set-output name=hubDir::{}'.format(hub_dir))
          print('::set-output name=rootDir::{}'.format(dir_path))
        shell: python
      - name: npm ci
        run: npm ci --only=production --no-fund
        working-directory: ${{ steps.hub.outputs.hubDir }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_S3_NIGHTLY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_S3_NIGHTLY_KEY }}
          aws-region: ${{ env.AWS_S3_NIGHTLY_REGION }}
      - name: Package the artifact (cross-env)
        id: pack
        run: |
          import shutil
          import os
          import boto3
          
          bucket = os.getenv("AWS_S3_NIGHTLY_BUCKET")
          s3_uri = os.getenv("AWS_S3_NIGHTLY_BASEURI")
          
          url = r"${{ github.event.inputs.source }}"
          basename = os.path.basename(url)[:-7]
          
          output_filename = basename.replace("netinstall", "win")
          
          shutil.make_archive(output_filename, 'zip', r"${{ steps.hub.outputs.rootDir }}")
          
          # Upload the file
          s3 = boto3.client('s3')
          try:
              response = s3.upload_file(output_filename+".zip", bucket, output_filename+".zip", ExtraArgs={'ACL': 'public-read'})
          except ClientError as e:
              logging.error(e)
              os.exit(1)
          
          print('::set-output name=artifact::{}'.format(output_filename))
          print("::warning ::Artifact is available at {}/{}.zip for the next days.".format(s3_uri, output_filename))
        shell: python
      
      - name: Archive
        uses: actions/upload-artifact@v2
        with:
          name: win
          path: "*.zip"
          if-no-files-found: error
          retention-days: 1
        
