name: build
on: 
  push: 
    branches: 
      - '**'
    tags:
      - v[0-9]+.[0-9]+*
defaults:
  run:
    shell: bash
env:
  AWS_S3_NIGHTLY_BASEURI: https://wifi-tally-nightly.s3.eu-central-1.amazonaws.com
  AWS_S3_NIGHTLY_BUCKET: wifi-tally-nightly
  AWS_S3_NIGHTLY_REGION: eu-central-1
jobs:
  # ###
  #  
  # Detect the version number to use
  # 
  # ###
  setup:
    runs-on: ubuntu-latest
    outputs:
      build_name: ${{ steps.calc.outputs.build_name }}
      author_name: ${{ steps.calc.outputs.author_name }}
      author_email: ${{ steps.calc.outputs.author_email }}
      committer_name: ${{ steps.calc.outputs.committer_name }}
      committer_email: ${{ steps.calc.outputs.committer_email }}
      is_head: ${{ steps.calc.outputs.is_head }}
      branch: ${{ steps.calc.outputs.branch }}
      is_release_tag: ${{ steps.calc.outputs.is_release_tag }}

    steps:
      - name: Checkout the source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # don't shallow clone! We could not generate a nice build_name otherwise
      - name: Generate parameters
        id: calc
        run: |
          echo "::set-output name=build_name::$(git describe --tags --always)"
          echo "::set-output name=author_name::${{ github.event.commits[0].author.name }}"
          echo "::set-output name=author_email::${{ github.event.commits[0].author.email }}"
          echo "::set-output name=committer_name::${{ github.event.commits[0].committer.name }}"
          echo "::set-output name=committer_email::${{ github.event.commits[0].committer.email }}"
          echo "::set-output name=is_head::${{ github.event.commits[0].id == github.event.head_commit.id }}"
          echo "::set-output name=branch::"
          if [[ "${GITHUB_REF}" == refs/heads/* ]]; then
            echo "::set-output name=branch::${GITHUB_REF:11}"
          fi
          echo "::set-output name=is_release_tag::false"
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "::set-output name=is_release_tag::true"
          fi
        shell: bash # we use bash syntax, so this is VERY important
      - name: Log Environment
        run: |
          echo "event=${{ toJson(github.event) }}"
      - name: Output
        run: |
          echo "build_name=${{ steps.calc.outputs.build_name }}"
          echo "author_name=${{ steps.calc.outputs.author_name }}"
          echo "author_email=${{ steps.calc.outputs.author_email }}"
          echo "committer_name=${{ steps.calc.outputs.committer_name }}"
          echo "committer_email=${{ steps.calc.outputs.committer_email }}"
          echo "is_head=${{ steps.calc.outputs.is_head }}"
          echo "branch=${{ steps.calc.outputs.branch }}"
          echo "is_release_tag=${{ steps.calc.outputs.is_release_tag }}"
          
  build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Generate a fake artifact
        run: |
          echo "${{ needs.setup.outputs.build_name }}" > version.txt
      - name: Archive artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: "./version.txt"
          if-no-files-found: error
          retention-days: 1

  nightly:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: .
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_S3_NIGHTLY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_S3_NIGHTLY_KEY }}
          aws-region: ${{ env.AWS_S3_NIGHTLY_REGION }}
      - name: push artifact
        run: |
          ARTIFACT_NAME="version-${{ needs.setup.outputs.build_name }}.txt"
          mv version.txt "${ARTIFACT_NAME}"
          aws s3 cp "${ARTIFACT_NAME}" "s3://${AWS_S3_NIGHTLY_BUCKET}/${ARTIFACT_NAME}" --acl public-read
          echo "::warning ::Your artifacts are available at ${AWS_S3_NIGHTLY_BASEURI}/${ARTIFACT_NAME} for the next days."




